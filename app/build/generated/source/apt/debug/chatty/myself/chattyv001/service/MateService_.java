//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.2.
//


package chatty.myself.chattyv001.service;

import java.util.Collections;
import android.content.Context;
import chatty.myself.chattyv001.model.ResponseMessage;
import chatty.myself.chattyv001.service.converter.Mate2HttpMessageConverter;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.web.client.RestTemplate;

public final class MateService_
    implements MateService
{

    private String rootUrl;
    private RestTemplate restTemplate;

    public MateService_(Context context) {
        rootUrl = "http://192.168.1.2:8080/web/chatty/mate/";
        restTemplate = new RestTemplate();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        restTemplate.getMessageConverters().add(new Mate2HttpMessageConverter());
    }

    @Override
    public String getRootUrl() {
        return rootUrl;
    }

    @Override
    public void setRootUrl(String arg0) {
        this.rootUrl = arg0;
    }

    @Override
    public ResponseMessage saveMate(chatty.myself.chattyv001.model.Mate Mate) {
        {
            HttpHeaders httpHeaders = new HttpHeaders();
            httpHeaders.setAccept(Collections.singletonList(MediaType.parseMediaType("application/json")));
            HttpEntity<chatty.myself.chattyv001.model.Mate> requestEntity = new HttpEntity<chatty.myself.chattyv001.model.Mate>(Mate, httpHeaders);
            return restTemplate.exchange(rootUrl.concat("save"), HttpMethod.POST, requestEntity, ResponseMessage.class).getBody();
        }
    }

}
